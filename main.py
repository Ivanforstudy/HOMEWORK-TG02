import os
import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, FSInputFile
from aiogram.enums import ContentType
from aiogram.fsm.storage.memory import MemoryStorage
from deep_translator import GoogleTranslator
from gtts import gTTS

API_TOKEN = '8035496523:AAHcY13y2KLb5tmFc6llXsDdFuiEzt9DrAQ'

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
os.makedirs("img", exist_ok=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# üì∑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@dp.message(F.photo)
async def handle_photo(message: Message):
    photo = message.photo[-1]  # —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
    file = await bot.get_file(photo.file_id)
    file_name = f"img/{photo.file_id}.jpg"
    await bot.download_file(file.file_path, destination=file_name)
    await message.answer("–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úÖ")

# üó£ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@dp.message(F.text & ~F.text.startswith('/'))
async def handle_text(message: Message):
    # –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
    translated_text = GoogleTranslator(source='auto', target='en').translate(message.text)
    await message.answer(f"–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π:\n{translated_text}")

    # –û–∑–≤—É—á–∫–∞
    tts = gTTS(translated_text, lang='en')
    voice_path = f"voice_{message.message_id}.ogg"
    tts.save(voice_path)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ
    voice_file = FSInputFile(voice_path)
    await message.answer_voice(voice_file)

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    os.remove(voice_path)

# üîä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /voice
@dp.message(F.text == "/voice")
async def send_sample_voice(message: Message):
    voice_path = "1718883178_sample4.ogg"
    if os.path.exists(voice_path):
        voice = FSInputFile(voice_path)
       
        await message.answer_voice(voice)
    else:
        await message.answer("–ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω üò•")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
